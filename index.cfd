import (wrap, map, acuteMap, graveMap): ./utils.js as module

/// Fetches a glyph of the given name and returns a classed <span> containing it.
def glyph: inline function glyph(doc, ...args) {

	// Grave accented
	function grave(char) {
		return wrap(char, graveMap[char])
	}

	// Acute accented
	function acute(char) {
		char = char.trim()
		return wrap(char, acuteMap[char])
	}

	// German umlaut vowels
	function umlaut(char) {
		char = char.trim()
		return wrap(char, umlautMap[char])
	}

	// Bar overtop of the given character.
	function bar(char) {
		return `<span class="glyph bar ${char}" style="text-decoration:overline">${char}</span>`
	}

	if (args.length === 1) {
		return wrap(args[0], map[args[0]])
	}
	if (args[0] === 'grave') {
		return grave(args[1])
	}
	if (args[0] === 'actue') {
		return acute(args[1])
	}
	if (args[0] === 'bar') {
		return bar(args[1])
	}
	if (args[0] === 'umlaut') {
		return umlaut(args[1])
	}
}
